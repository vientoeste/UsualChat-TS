{% extends 'layout.html' %} 
{% block content %}
<h1>{{title}}</h1>
<div align="right"> <a href="/" type="button" id="exit-btn">방 나가기</a>
{% if user === room.owner and title !== 'Direct Message' %}
  <form id="removeroom">
    <button type="submit">방 제거</button>
  </form>
{% endif %}  
  <form action="/room/{{room._id}}/clearchat" method="post" id="removechat">
    <input type='text' name='friend' value='{{room._id}}' style='display: none;'>
    <button type="submit">채팅 내역 삭제</button>
  </form>
</div>
<fieldset>
  <legend>채팅 내용</legend>
  <div id="chat-list">
    {% for chat in chats %} 
      {% if chat.user === user %}
      <div class="mine">
        <div>{{chat.user}}</div>
        {% if chat.img %}
          <a href="/img/{{chat.img}}" download>다운로드</a>
          <img src="/img/{{chat.img}}" style="cursor:pointer" onclick="window.open('/img/{{chat.img}}', '이미지', 'scrollbars=yes, width=417, height=385, top=10, left=20');"/>
        {% elif chat.file %}
          <img src="/file/{{chat.file}}" />
        {% else %}
          <div>{{chat.chat}}</div>
        {% endif %}
      </div>
      {% elif chat.user === 'system' %}
        <div class="system">
          <div>{{chat.chat}}</div>
        </div>
      {% else %}
      <div class="other">
        <div>{{chat.user}}</div>
        {% if chat.img %}
          <img src="/img/{{chat.img}}" style="cursor:pointer" onclick="window.open('/img/{{chat.img}}', '이미지', 'scrollbars=yes, width=417, height=385, top=10, left=20');"/>
          <a href="/img/{{chat.img}}" download>다운로드</a>
        {% elif chat.file %}
          <img src="/file/{{chat.file}}" />
        {% else %}
          <div>{{chat.chat}}</div>
        {% endif %}
      </div>
      {% endif %} 
    {% endfor %}
  </div>
</fieldset>
<form action="/chat" id="chat-form" method="post" enctype="multipart/form-data">
  <label for="img">파일 업로드</label>
  <input type="file" id="img" name="img">
  <input type="text" id="chat" name="chat">
  <button type="submit">전송</button>
</form>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io.connect('http://usualchat.ga:3001/chat', {
    path: '/socket.io',
  });

  socket.on('register', (data) => {
    const div = document.createElement('div');
    div.classList.add('system');
    const chat = document.createElement('div');
    div.textContent = data.chat;
    div.appendChild(chat);
    document.querySelector('#chat-list').appendChild(div);
  });

  socket.on('reload', () => {
    location.reload();
  })

  socket.on('exit', (data) => {
    const div = document.createElement('div');
    div.classList.add('system');
    const chat = document.createElement('div');
    div.textContent = data.chat;
    div.appendChild(chat);
    document.querySelector('#chat-list').appendChild(div);
  });

  socket.on('chat', (data) => {
    const div = document.createElement('div');
    const img = document.createElement('img');
    const file = document.createElement('file');

    if (data.user === '{{user}}') {
      div.classList.add('mine');
    } else {
      div.classList.add('other');
    }
    const name = document.createElement('div');
    name.textContent = data.user;
    div.appendChild(name);
    if (data.chat) {
      const chat = document.createElement('div');
      chat.textContent = data.chat;
      div.appendChild(chat);
    } else if (data.img) {
      img.src = '/img/' + data.img;
      div.appendChild(img);
    } else if (data.file) {
      file.src = '/file/' + data.file;
      div.appendChild(file);
    }
    document.querySelector('#chat-list').appendChild(div);
  });

  document.querySelector('#chat-form').addEventListener('submit', (e) => {
    e.preventDefault();
    if (e.target.chat.value) {
      axios
        .post('/room/{{room._id}}/chat', {
          chat: this.chat.value,
        })
        .then(() => {
          e.target.chat.value = '';
        })
        .catch((err) => {
          console.error(err);
        });
    }
  });

  document.querySelector('#img').addEventListener('change', (e) => {
    console.log(e.target.files);
    const formData = new FormData();
    formData.append('img', e.target.files[0]);
    axios
      .post('/room/{{room._id}}/img', formData)
      .then(() => {
        e.target.file = null;
      })
      .catch((err) => {
        console.error(err);
      });
  });
{# 
  document.querySelector('#file').addEventListener('change', (e) => {
    console.log(e.target.files);
    const formData = new FormData();
    formData.append('file', e.target.files[0]);
    axios
      .post('/room/{{room._id}}/file', formData)
      .then(() => {
        e.target.file = null;
      })
      .catch((err) => {
        console.error(err);
      });
  }); #}

  document.querySelector('#removeroom').addEventListener('submit', (e) => {
    e.preventDefault();
    axios.delete('/room/{{room._id}}');
  });
</script>
{% endblock %}
